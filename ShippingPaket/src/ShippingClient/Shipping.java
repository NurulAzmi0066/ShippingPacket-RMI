/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ShippingClient;
import ShippingServer.OprationRMI;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import ShippingServer.Services;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author ASUS
 */
public class Shipping extends javax.swing.JFrame {

    /**
     * Creates new form Shipping
     */
    OprationRMI calc;
    
    public Shipping() throws RemoteException, NotBoundException, MalformedURLException {
        initComponents();
        try {
            Registry register = LocateRegistry.getRegistry("172.125.0.171"); //note : ganti dengan IP PC Server
            calc = (OprationRMI) Naming.lookup("rmi://172.125.0.171:2000/services");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Tidak dapat terhubung ke server. Pastikan server RMI berjalan.");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        panel2 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        HitungOngkir = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jarak = new javax.swing.JLabel();
        layanan = new javax.swing.JLabel();
        reguler = new javax.swing.JRadioButton();
        express = new javax.swing.JRadioButton();
        instan = new javax.swing.JRadioButton();
        kg = new javax.swing.JTextField();
        diskon1 = new javax.swing.JLabel();
        diskon2 = new javax.swing.JTextField();
        totalB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        totalHarga = new javax.swing.JTextPane();
        km = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sameday = new javax.swing.JRadioButton();

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        HitungOngkir.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        HitungOngkir.setText("Hitung Ongkos Kirim");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Berat Barang (Kg)");

        jarak.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jarak.setText("Jarak Pengiriman (Km)");

        layanan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        layanan.setText("Jenis Layanan Pengiriman");

        reguler.setText("Reguler");
        reguler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regulerActionPerformed(evt);
            }
        });

        express.setText("Express");
        express.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expressActionPerformed(evt);
            }
        });

        instan.setText("Instan");
        instan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instanActionPerformed(evt);
            }
        });

        kg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kgActionPerformed(evt);
            }
        });

        diskon1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        diskon1.setText("Diskon (Jika ada)");
        diskon1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                diskon1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        diskon2.setColumns(1);
        diskon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diskon2ActionPerformed(evt);
            }
        });

        totalB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        totalB.setText("Total");
        totalB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        totalB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBActionPerformed(evt);
            }
        });

        totalHarga.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                totalHargaAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(totalHarga);

        km.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kmActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 10)); // NOI18N
        jLabel2.setText("CopyrightÂ©2024 NurulAzmi & PutriElsaMusati");

        sameday.setText("Same Day");
        sameday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samedayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jarak))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kg, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(km, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reguler)
                                .addGap(18, 18, 18)
                                .addComponent(express)
                                .addGap(18, 18, 18)
                                .addComponent(instan))
                            .addComponent(layanan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(sameday)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(diskon1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(diskon2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(HitungOngkir)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HitungOngkir)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kg, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(km, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jarak))
                .addGap(39, 39, 39)
                .addComponent(layanan)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(express)
                    .addComponent(instan)
                    .addComponent(reguler)
                    .addComponent(sameday))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diskon1)
                    .addComponent(diskon2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalB)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void expressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expressActionPerformed
        // TODO add your handling code here:
        if (express.isSelected()) {
            reguler.setSelected(false);
            instan.setSelected(false);
            sameday.setSelected(false);
        }
    }//GEN-LAST:event_expressActionPerformed

    private void kgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kgActionPerformed
        // TODO add your handling code here:
        try {
            double berat = Double.parseDouble(kg.getText());
            if (berat <= 0) {
                JOptionPane.showMessageDialog(this, "Berat barang harus lebih dari 0.", "Input Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan berat barang yang valid.", "Input Error", JOptionPane.ERROR_MESSAGE);
            kg.setText("");
        }
    }//GEN-LAST:event_kgActionPerformed
 
    private void diskon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diskon2ActionPerformed
        // TODO add your handling code here:
        Map<String, Double> validTokens = new HashMap<>();
        validTokens.put("DISKON10", 10.0);
        validTokens.put("DISKON20", 20.0);
        validTokens.put("DISKON30", 30.0);

        String inputToken = diskon2.getText().trim(); // Mengambil input dari field

        if (validTokens.containsKey(inputToken)) {
            // Jika token valid, tampilkan nilai diskon
            double nilaiDiskon = validTokens.get(inputToken);
            JOptionPane.showMessageDialog(this, "Token diskon diterima: " + inputToken + "\nDiskon: " + nilaiDiskon + "%", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Jika token tidak valid, tampilkan pesan error dan kosongkan field
            JOptionPane.showMessageDialog(this, "Token diskon tidak valid. Silakan masukkan token yang benar.", "Input Error", JOptionPane.ERROR_MESSAGE);
            diskon2.setText("");
        }
    }//GEN-LAST:event_diskon2ActionPerformed

    private void totalBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalBActionPerformed
        // TODO add your handling code here:
        try {
        // Ambil nilai input dari GUI
            double berat = Double.parseDouble(kg.getText());
            double jarakPengiriman = Double.parseDouble(km.getText());
        
        // Validasi token diskon
            String tokenDiskon = diskon2.getText();
            double diskon = 0.0;
            HashMap<String, Double> validasiDiskon = new HashMap<>();
            validasiDiskon.put("DISKON10", 10.0);
            validasiDiskon.put("DISKON20", 20.0);
            validasiDiskon.put("DISKON30", 30.0);

            if (!tokenDiskon.isEmpty() && validasiDiskon.containsKey(tokenDiskon)) {
                diskon = validasiDiskon.get(tokenDiskon);
            } else if (!tokenDiskon.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Token diskon tidak valid.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return; // Berhenti jika token tidak valid
            }

            // Tentukan jenis layanan pengiriman
            String jenisLayanan = null;
            if (express.isSelected()) {
                jenisLayanan = "Express";
            } else if (instan.isSelected()) {
                jenisLayanan = "Instan";
            }else if (sameday.isSelected()) {
                jenisLayanan = "Same Day";
            } else if (reguler.isSelected()) {
            jenisLayanan = "Reguler";
            }
            
            if (jenisLayanan == null) {
                   JOptionPane.showMessageDialog(this, "Silakan pilih jenis layanan pengiriman terlebih dahulu.", "Input Error", JOptionPane.ERROR_MESSAGE);
                   return; // Berhenti jika jenis layanan belum dipilih
            }
            
            // Hitung ongkos kirim melalui layanan RMI
            double ongkos = calc.calculateShippingCost(berat, jarakPengiriman, jenisLayanan);

            // Terapkan diskon
            double total = ongkos - (ongkos * diskon / 100);

            // Tampilkan hasil
            totalHarga.setText("Rp " + total);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk berat dan jarak.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghitung ongkos kirim: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_totalBActionPerformed

    private void kmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kmActionPerformed
        // TODO add your handling code here:
        try {
            double jarakPengiriman = Double.parseDouble(km.getText());
            if (jarakPengiriman <= 0) {
                JOptionPane.showMessageDialog(this, "Jarak pengiriman harus lebih dari 0.", "Input Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan jarak pengiriman yang valid.", "Input Error", JOptionPane.ERROR_MESSAGE);
            km.setText("");
        }
    }//GEN-LAST:event_kmActionPerformed

    private void regulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regulerActionPerformed
        // TODO add your handling code here:
        if (reguler.isSelected()) {
            express.setSelected(false);
            instan.setSelected(false);
            sameday.setSelected(false);
        }
    }//GEN-LAST:event_regulerActionPerformed

    private void instanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instanActionPerformed
        // TODO add your handling code here:
        if (instan.isSelected()) {
            reguler.setSelected(false);
            express.setSelected(false);
            sameday.setSelected(false);
        }
    }//GEN-LAST:event_instanActionPerformed

    private void diskon1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_diskon1AncestorAdded
        // TODO add your handling code here:
          
    }//GEN-LAST:event_diskon1AncestorAdded

    private void totalHargaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_totalHargaAncestorAdded
        // TODO add your handling code here:
        totalHarga.setText("Rp. 0");
        totalHarga.setEditable(false);
    }//GEN-LAST:event_totalHargaAncestorAdded

    private void samedayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samedayActionPerformed
        // TODO add your handling code here:
        if (sameday.isSelected()) {
            reguler.setSelected(false);
            express.setSelected(false);
            instan.setSelected(false);
        }
    }//GEN-LAST:event_samedayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            // Menjalankan aplikasi GUI
            new Shipping().setVisible(true);
        } catch (RemoteException | NotBoundException | MalformedURLException e) {
            // Menangani exception yang mungkin terjadi saat inisialisasi RMI
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HitungOngkir;
    private javax.swing.JLabel diskon1;
    private javax.swing.JTextField diskon2;
    private javax.swing.JRadioButton express;
    private javax.swing.JRadioButton instan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jarak;
    private javax.swing.JTextField kg;
    private javax.swing.JTextField km;
    private javax.swing.JLabel layanan;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JRadioButton reguler;
    private javax.swing.JRadioButton sameday;
    private javax.swing.JButton totalB;
    private javax.swing.JTextPane totalHarga;
    // End of variables declaration//GEN-END:variables
}
